/**
  Copyright (c) 2023 by Contributors
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ml_dmlc_tl2cgen4j_java_TL2cgenJNI */

#ifndef JAVA_RUNTIME_TL2CGEN4J_SRC_NATIVE_TL2CGEN4J_H_
#define JAVA_RUNTIME_TL2CGEN4J_SRC_NATIVE_TL2CGEN4J_H_
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenGetLastError
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenGetLastError(
    JNIEnv*, jclass);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixCreateFromCSRWithFloat32In
 * Signature: ([F[I[JJJ[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixCreateFromCSRWithFloat32In(
    JNIEnv*, jclass, jfloatArray, jintArray, jlongArray, jlong, jlong, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixCreateFromCSRWithFloat64In
 * Signature: ([D[I[JJJ[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixCreateFromCSRWithFloat64In(
    JNIEnv*, jclass, jdoubleArray, jintArray, jlongArray, jlong, jlong, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixCreateFromMatWithFloat32In
 * Signature: ([FJJF[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixCreateFromMatWithFloat32In(
    JNIEnv*, jclass, jfloatArray, jlong, jlong, jfloat, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixCreateFromMatWithFloat64In
 * Signature: ([DJJD[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixCreateFromMatWithFloat64In(
    JNIEnv*, jclass, jdoubleArray, jlong, jlong, jdouble, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixGetDimension
 * Signature: (J[J[J[J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixGetDimension(
    JNIEnv*, jclass, jlong, jlongArray, jlongArray, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenDMatrixFree
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenDMatrixFree(
    JNIEnv*, jclass, jlong);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorLoad
 * Signature: (Ljava/lang/String;I[J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorLoad(
    JNIEnv*, jclass, jstring, jint, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorPredictBatchWithFloat32Out
 * Signature: (JJZZ[F[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorPredictBatchWithFloat32Out(
    JNIEnv*, jclass, jlong, jlong, jboolean, jboolean, jfloatArray, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorPredictBatchWithFloat64Out
 * Signature: (JJZZ[D[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorPredictBatchWithFloat64Out(
    JNIEnv*, jclass, jlong, jlong, jboolean, jboolean, jdoubleArray, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorPredictBatchWithUInt32Out
 * Signature: (JJZZ[I[J)I
 */
JNIEXPORT jint JNICALL
Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorPredictBatchWithUInt32Out(
    JNIEnv*, jclass, jlong, jlong, jboolean, jboolean, jintArray, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryResultSize
 * Signature: (JJ[J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryResultSize(
    JNIEnv*, jclass, jlong, jlong, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryNumClass
 * Signature: (J[J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryNumClass(
    JNIEnv*, jclass, jlong, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryNumFeature
 * Signature: (J[J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryNumFeature(
    JNIEnv*, jclass, jlong, jlongArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryPredTransform
 * Signature: (J[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryPredTransform(
    JNIEnv*, jclass, jlong, jobjectArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQuerySigmoidAlpha
 * Signature: (J[F)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQuerySigmoidAlpha(
    JNIEnv*, jclass, jlong, jfloatArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryRatioC
 * Signature: (J[F)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryRatioC(
    JNIEnv*, jclass, jlong, jfloatArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryGlobalBias
 * Signature: (J[F)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryGlobalBias(
    JNIEnv*, jclass, jlong, jfloatArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryThresholdType
 * Signature: (J[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryThresholdType(
    JNIEnv*, jclass, jlong, jobjectArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorQueryLeafOutputType
 * Signature: (J[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorQueryLeafOutputType(
    JNIEnv*, jclass, jlong, jobjectArray);

/*
 * Class:     ml_dmlc_tl2cgen4j_java_TL2cgenJNI
 * Method:    TL2cgenPredictorFree
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_ml_dmlc_tl2cgen4j_java_TL2cgenJNI_TL2cgenPredictorFree(
    JNIEnv*, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif  // JAVA_RUNTIME_TL2CGEN4J_SRC_NATIVE_TL2CGEN4J_H_
